- name: Ensure group "zookeeper" exists
  group:
    name: '{{ group }}'
    state: present

- name: Create "zookeeper" service user
  user:
    name: '{{ user }}'
    group: '{{ group }}'
    create_home: false
    shell: /sbin/nologin
    state: present

- name: Download Apache Zookeeper {{ version }}
  get_url:
    url: '{{ binary_url }}'
    dest: /opt

- name: Make sure destination dir exists
  file:
    path: '{{ installation_dir }}'
    state: directory
    recurse: yes

- name: Extract the downloaded file
  unarchive:
    src: /opt/{{ tar_filename }}
    dest: '{{ installation_dir }}'
    extra_opts: [--strip-components=1]
    remote_src: true

- name: Recursively change ownership of zookeeper installation directory
  file:
    path: '{{ installation_dir }}'
    state: directory
    owner: '{{ user }}'
    group: '{{ group }}'
    recurse: true

- name: Create config directory if it does not exist
  file:
    path: '{{ config_dir }}'
    state: directory
    owner: '{{ user }}'
    group: '{{ group }}'
    mode: '0755'

- name: Create data directory if it does not exist
  file:
    path: '{{ data_dir }}'
    state: directory
    owner: '{{ user }}'
    group: '{{ group }}'
    mode: '0755'

- name: Create configuration zoo.cfg
  template:
    src: zoo.cfg.j2
    dest: '{{ config_dir }}/zoo.cfg'
    owner: '{{ user }}'
    group: '{{ group }}'

- name: Configure data directory
  lineinfile:
    path: '{{ config_dir }}/zoo.cfg'
    regexp: '^dataDir='
    line: dataDir={{ data_dir }}

- name: Copy systemd service file to server
  template:
    src: zookeeper.service.j2
    dest: /etc/systemd/system
    owner: root
    group: root
  notify:
    - Start zookeeper
